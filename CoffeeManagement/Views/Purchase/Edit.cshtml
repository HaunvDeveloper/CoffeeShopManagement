@model Purchase

@{
    ViewData["Title"] = "Chỉnh sửa mua hàng";
    var paymentStatus = new List<SelectListItem>
    {
        new SelectListItem("CHƯA THANH TOÁN", "CHƯA THANH TOÁN"),
        new SelectListItem("ĐÃ THANH TOÁN", "ĐÃ THANH TOÁN"),
    };
}
@section Links {
    <link rel="stylesheet" href="~/assets/css/course.css">
    <link rel="stylesheet" href="~/assets/css/checkbox.css">
    <style>
        .form-group {
            display: flex;
            flex-direction: column;
        }
    </style>
}

<div class="container">
    <div class="table-container m-4">
        <h4 class="text-center mb-4 mt-2 text-danger" style="font-size:30px;font-weight:bold;">CHỈNH SỬA MUA HÀNG</h4>
        <form asp-action="Edit" asp-controller="Purchase" method="post" id="form-edit" class="container">
            @Html.HiddenFor(x => x.Id)
            <input type="hidden" name="PurchasedNo" value="@Model.PurchasedNo" />
            <div class="row info-detail">
                <div class="col-lg-4">
                    <div class="form-group mb-3">
                        <span class="text-no-wrap">Số Mua hàng</span>
                        <input class="form-control" value="@Model.PurchasedNo" disabled />
                    </div>
                    <div class="form-group mb-3">
                        <span class="text-no-wrap">Nhà cung cấp</span>
                        @Html.DropDownListFor(x => x.SupplierId, (IEnumerable<SelectListItem>)ViewBag.Suppliers, new { @class = "form-control", required = "required" })
                    </div>
                    <div class="form-group mb-3">
                        <span class="text-no-wrap">Số Hóa đơn</span>
                        <input asp-for="BillNo" class="form-control" />
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group mb-3">
                        <span class="text-no-wrap">Ngày mua hàng</span>
                        <input asp-for="PurchasedDate" type="date" class="form-control" required />
                    </div>
                    <div class="form-group mb-3">
                        <span class="text-no-wrap">Ngày thanh toán</span>
                        <input asp-for="PaymentDate" type="date" class="form-control" required />
                    </div>
                    <div class="form-group mb-3">
                        <span class="text-no-wrap">Trạng tháng thanh toán</span>
                        @Html.DropDownListFor(x => x.PaymentStatus, paymentStatus, new { @class = "form-control", required = "required" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group mb-3 form-account">
                        <label style="font-size:30px;" class="text-danger">Tổng thành tiền</label>
                        <b style="font-size:30px;" class="text-success" id="TotalAmount">@Model.TotalAmount?.ToString("N0")</b>
                    </div>
                    <div class="form-group mb-3 form-account">
                        <span class="text-no-wrap">Diễn giải</span>
                        <textarea asp-for="Description" class="form-control"></textarea>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12 table-responsive">
                    <table class="table table-hover table-bordered">
                        <thead>
                            <tr class="table-primary">
                                <th>STT</th>
                                <th>Nguyên liệu</th>
                                <th>Số lượng</th>
                                <th>Đơn vị</th>
                                <th>Đơn giá</th>
                                <th>VAT</th>
                                <th>Thành tiền</th>
                                <th>Ghi chú</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="tbody-list">
                            @if (Model.PurchaseDetails != null && Model.PurchaseDetails.Any())
                            {
                                int stt = 1;
                                foreach (var item in Model.PurchaseDetails)
                                {
                                    <tr>
                                        <td>@stt</td>
                                        <td>
                                            @Html.DropDownList("ItemId", new SelectList(ViewBag.Inventories, "Id", "Name", item.ItemId), "-- Chọn nguyên liệu --", new { @class = "ItemId form-control", required = "required" })
                                        </td>
                                        <td><input type="number" class="Quantity form-control" min="0" value="@item.Quantity" required /></td>
                                        <td class="Unit">@item.Item?.Unit</td>
                                        <td><input type="number" class="UnitPrice form-control" min="0" value="@item.UnitPrice" required /></td>
                                        <td><input type="number" class="Vat form-control" min="0" value="@item.Vat" /></td>
                                        <td class="text-center text-no-wrap"><b class="TotalPrice">0</b> VND</td>
                                        <td><input type="text" class="Description form-control" value="@item.Description" /></td>
                                        <td><button onclick="deleteRow(this)" type="button" class="btn btn-danger">Xóa</button></td>
                                    </tr>
                                    stt++;
                                }
                            }
                        </tbody>
                        <tfoot>
                            <tr class="table-warning">
                                <td colspan="6" class="text-lg-end">Tổng thành tiền</td>
                                <td class="text-center text-no-wrap">
                                    <b class="SumTotalPrice">0</b> VND
                                </td>
                                <td></td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                    <button id="btn-add-row" class="btn btn-primary" type="button">Thêm hàng</button>
                </div>
            </div>

            <div class="mt-3 text-lg-end">
                <a asp-action="Index" class="btn btn-outline-secondary">Quay lại</a>
                <button id="btn-save" type="submit" class="btn btn-primary">Lưu thay đổi</button>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    <script>
        var rowContent = `<tr>
                                        <td>1</td>
                                        <td>
        @Html.DropDownList("ItemId", new SelectList(ViewBag.Inventories, "Id", "Name"), "-- Chọn nguyên liệu --", new { @class = "ItemId form-control", required = "required" })
                                        </td>
                                        <td>
                                            <input type="number"  min="0" class="Quantity form-control" required/>
                                        </td>
                                        <td class="Unit"></td>
                                        <td>
                                            <input type="number" min="0" class="UnitPrice form-control" required/>
                                        </td>
                                        <td>
                                            <input type="number" min="0" class="Vat form-control" />
                                        </td>
                                        <td class="text-center text-no-wrap">
                                            <b class="TotalPrice">0</b> VND
                                        </td>
                                        <td>
                                            <input type="text" class="Description form-control"  />
                                        </td>
                                        <td>
                                            <button onclick="deleteRow(this)" type="button" class="btn btn-danger">Xóa</button>
                                        </td>
                                    </tr>`;

        $(document).ready(function () {

            $('form').submit(function (event) {
                event.preventDefault();
                $('#btn-save').attr("disabled", true);
                var data = {
                    Id: '@Model.Id',
                    PurchasedNo: $('#PurchasedNo').val(),
                    SupplierId: $('#SupplierId').val(),
                    BillNo: $('#BillNo').val(),
                    PurchasedDate: $('#PurchasedDate').val(),
                    PaymentDate: $('#PaymentDate').val(),
                    SupplierName: $('#SupplierId option:selected').text(),
                    PaymentStatus: $('#PaymentStatus').val(),
                    Description: $('#Description').val(),
                    TotalAmount: $('#TotalAmount').text().replaceAll(',', ''),
                    PurchaseDetails: []
                }

                $('#tbody-list tr').each(function (index, tr) {
                    var objectItem = {
                        ItemId: $(tr).find('.ItemId').val(),
                        ItemName: $(tr).find('.ItemId option:selected').text(),
                        Quantity: $(tr).find('.Quantity').val(),
                        UnitPrice: $(tr).find('.UnitPrice').val(),
                        Vat: $(tr).find('.Vat').val() || 0,
                        Description: $(tr).find('.Description').val()
                    }

                    if (objectItem.ItemId && objectItem.Quantity && objectItem.UnitPrice) {
                        data.PurchaseDetails.push(objectItem);
                    }
                });

                $.ajax({
                    url: '@Url.Action("Edit", "Purchase")',
                    method: 'post',
                    data: data,
                    success: function (response) {
                        if (response.success) {
                            showAlert("success", "Cập nhật thành công");
                            setTimeout(function () {
                                window.location.href = response.redirect;
                            }, 1500);
                        } else {
                            showAlert("error", response.error);
                        }
                    },
                    error: function (error) {
                        console.log(error);
                        showAlert("error", "Có lỗi xảy ra khi gửi yêu cầu.");
                    },
                    complete: function () {
                        $('#btn-edit').removeAttr("disabled");
                    }
                });
            });

            $('#btn-add-row').on('click', () => {
                $('#tbody-list').append(rowContent);
                $('#tbody-list tr').each(function (index) {
                    $(this).find('td:first').text(index + 1);
                });
            });
        });

        $(document).on('change', '.ItemId', function () {
            var selectedItemId = $(this).val();
            var unit = '';

            @foreach (var item in ViewBag.Inventories)
            {
                <text>
                                if (selectedItemId == '@item.Id') {
                        unit = '@Html.Raw(item.Unit)';
                    }
                </text>
            }

            $(this).closest('tr').find('.Unit').text(unit);
        });

        function calculateTotalPrice(row) {
            var quantity = parseFloat($(row).find('.Quantity').val()) || 0;
            var unitPrice = parseFloat($(row).find('.UnitPrice').val()) || 0;
            var vat = parseFloat($(row).find('.Vat').val()) || 0;

            var totalPrice = quantity * unitPrice * (1 + vat / 100);
            $(row).find('.TotalPrice').text(formatCurrencyVN(totalPrice.toFixed(2)));
            calculateSumTotalPrice();
        }

        function calculateSumTotalPrice() {
            var sumTotal = 0;

            $('#tbody-list tr').each(function () {
                var totalPrice = parseFloat($(this).find('.TotalPrice').text().replaceAll(',', '')) || 0;
                sumTotal += totalPrice;
            });

            $('.SumTotalPrice').text(formatCurrencyVN(sumTotal.toFixed(2)));
            $('#TotalAmount').text(formatCurrencyVN(sumTotal.toFixed(2)));
        }

        $(document).on('input', '.Quantity, .UnitPrice, .Vat', function () {
            var row = $(this).closest('tr');
            calculateTotalPrice(row);
        });
        $('.Quantity').trigger('input');

        function deleteRow(element) {
            var count = $('#tbody-list tr').length;
            if (count > 1) {
                $(element).closest('tr').remove();
                $('.Quantity').trigger('input');
                $('#tbody-list tr').each(function (index) {
                    $(this).find('td:first').text(index + 1);
                });
            }
        }

        function formatCurrencyVN(value) {
            if (isNaN(value)) return '0';
            let num = parseFloat(value).toFixed(2);
            let parts = num.split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts[1] === "00" ? parts[0] : parts.join(".");
        }
    </script>

}
