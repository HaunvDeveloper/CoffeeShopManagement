@model IEnumerable<CoffeeManagement.Models.Order>

@{
    ViewData["Title"] = "Check Orders for Table";
    var tableId = ViewBag.TableId;
    var tableNo = ViewBag.TableNo;
    var dictionary = new Dictionary<string, string>
    {
        { "cash", "Tiền mặt" },
        { "card", "Thẻ" },
        { "mobile", "Chuyển khoản" },
        { "", "Chưa thanh toán" } // Default case for null or empty payment method}
    };
    var paymentMethod = new List<SelectListItem>
    {
        new SelectListItem { Value = "cash", Text = "Tiền mặt" },
        new SelectListItem { Value = "card", Text = "Thẻ" },
        new SelectListItem { Value = "mobile", Text = "Chuyển khoản" }
    };
}

<div class="container mt-5">
    <h2 class="text-center mb-4" style="font-size: 30px; font-weight: bold; color: #dc3545;">ĐƠN HÀNG BÀN @tableNo</h2>

    @if (Model.Any())
    {
        <div class="d-flex justify-content-between">
            <div>
                <a href="@Url.Action("ChooseTable", "Order")" class="btn btn-secondary">
                    ← Quay lại
                </a>
            </div>

            <!-- Add New Order Button -->
            <div class="mb-4 d-flex justify-content-end">
                @if(Model.Any(o => o.IsPaid == false))
                {
                    <button id="btn-payment-all" class="btn btn-success me-2" data-bs-toggle="modal" data-bs-target="#choosePaymentMethodModal">
                        <i class="bi bi-cash-coin me-2"></i>Thanh toán tất cả
                    </button>
                }
                
                <a href="@Url.Action("Order", "Order", new { tableId = tableId })" class="btn btn-primary me-2">
                    <i class="bi bi-plus-circle me-2"></i>Thêm Order Mới
                </a>
            </div>
        </div>



        <!-- Order List -->
        <div class="row g-4" id="orderList">
            @foreach (var order in Model)
            {
                <div class="card-bill col-md-6 col-lg-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="text-dark card-title mb-2 bill-no">Order <strong class="badge bg-success">#@order.BillNo</strong> </h5>
                            @if (!order.IsPaid)
                            {
                                <button style="right: 10px;" data-order-id="@order.Id" class="btn-payment-order position-absolute btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#choosePaymentMethodModal">Thanh toán</button>
                            }
                            else
                            {
                                <a style="right: 10px;" class="position-absolute btn btn-outline-primary" asp-action="OrderConfirm" asp-controller="Order" asp-route-id="@order.Id">Xem hóa đơn</a>
                            }
                        </div>
                        <div class="card-body d-flex flex-column">

                            <h5 class="card-text">Số bán hàng: @order.SaleNo</h5>

                            <p class="card-text @(order.IsPaid ? "text-success" : "text-danger")"><b>Trạng thái thanh toán: @(order.IsPaid ? "Đã thanh toán" : "Chưa thanh toán")</b></p>
                            <p class="card-text @(order.IsPaid ? "text-success" : "text-danger")">Phương thức thanh toán: @(dictionary[order.PaymentMethod ?? ""])</p>
                            <div class="d-flex mt-3 mb-0 justify-content-between">
                                <h6><i class="bi bi-people-fill"></i>  @((int)order.OrderDetails.Sum(x => x.Quantity)) món</h6>
                                <h5 class="text-warning amountByOrder" style="font-weight:900;">@order.TotalAmount.ToString("C", new System.Globalization.CultureInfo("vi-VN"))</h5>
                            </div>
                            <!-- Thêm các thông tin khác nếu cần, ví dụ: OrderDate, TotalAmount -->
                            <div class="card-text d-flex gap-1 justify-content-between">
                                @if (!order.IsPaid)
                                {
                                    <a href="@Url.Action("Order", "Order", new { tableId = order.TableId, saleId = order.Id })" class="btn btn-warning btn-sm">
                                        <i class="bi bi-pencil-square me-2"></i>Chỉnh sửa Order
                                    </a>
                                }
                                <a href="#" class="btn btn-danger btn-sm leave-order" data-order-id="@order.Id">
                                    <i class="bi bi-box-arrow-in-right me-2"></i>Đã rời đi
                                </a>
                            </div>

                        </div>
                    </div>
                </div>
            }
        </div>
       
    }
    else
    {
        <script>
            window.location.href = '@Url.Action("Order", "Order", new { tableId = tableId })';
        </script>
    }
</div>


<div class="modal fade" id="choosePaymentMethodModal" tabindex="-1" aria-labelledby="choosePaymentMethodModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="choosePaymentMethodModalLabel">Phương thức thanh toán</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="choosePaymentMethodForm" class="needs-validation" novalidate>
                    <input type="hidden" id="tableId" value="@tableId" />
                    <input type="hidden" id="kindPayment" value="all" />
                    <input type="hidden" id="orderId" value="0" />
                    <input type="hidden" id="totalAllTable" value="@(Model.Where(x => x.IsPaid == false).Sum(x => x.TotalAmount).ToString("C", new System.Globalization.CultureInfo("vi-VN")))" />
                    <div class="alert alert-success">
                        <h5 class="titlePaymentMethod">ĐƠN HÀNG BÀN @tableNo</h5>
                        <h6>Tổng tiền thanh toán còn lại: <b class="totalAmountByTable"></b></h6>
                    </div>
                    <div class="mb-3">
                        <label for="newTableSelect" class="form-label">Chọn phương thức thanh toán</label>
                        <select class="form-select" id="newTableSelect" required asp-items="paymentMethod">
                        </select>
                        <div class="invalid-feedback">Vui lòng chọn bàn mới.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="btn-payment-save">Thanh toán</button>
            </div>
        </div>
    </div>
</div>



@section Links {
    <style>
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .card-title {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .card-text {
            font-size: 1rem;
            margin-bottom: 0.5rem;
        }

        .btn-takeaway {
            font-size: 1.2rem;
            font-weight: bold;
            padding: 0.75rem 1.5rem;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.leave-order').on('click', async function (e){
                if (!await confirmAction('Bạn có chắc chắn xác nhận rời đi?', 'warning', '')) {
                    return;
                }
                e.preventDefault();
                const orderId = $(this).data('order-id');
                const cardOrder = $(this).closest('.card-bill');
                $.ajax({
                    url: '@Url.Action("LeaveOrder", "Order")',
                    type: 'POST',
                    data: { orderId: orderId },
                    success: function (response) {
                        if (response.success) {
                            if(!response.isRedirect){
                                showToast('success', response.message);
                                $(cardOrder).remove();
                            }else{
                                showAlertRedirect('success', 'Thành công', '',response.redirect);
                            }

                        } else {
                            alert('Xảy ra lỗi khi xác nhận rời đi. Vui lòng thử lại.');
                        }
                    },
                    error: function () {
                        alert('Xảy ra lỗi khi xác nhận rời đi. Vui lòng thử lại.');
                    }
                });
            });

            $('.view-all-bill').on('click', function(event){
                if($('.btn-payment-order').length == 0){
                    window.location.href = '@Url.Action("OrderConfirmByTable", "Order", new { tableId = tableId })';
                }else{
                    event.preventDefault();
                    $('#btn-payment-all').trigger('click');
                }
            });

            $('#btn-payment-all').on('click', function (){
                $('#tableId').val('@tableId');
                $('#kindPayment').val('all');
                const totalAmount = $('#totalAllTable').val();
                $('.totalAmountByTable').text(totalAmount);
                $('.titlePaymentMethod').text('ĐƠN HÀNG BÀN @tableNo');
            });

            $('.btn-payment-order').on('click', function(){
                const orderId = $(this).data('order-id');
                $('#orderId').val(orderId);
                $('#kindPayment').val('order');
                const totalAmount = $(this).closest('.card-bill').find('.amountByOrder').text();
                $('.totalAmountByTable').text(totalAmount);
                $('.titlePaymentMethod').text($(this).closest('.card-bill').find('.bill-no').text());
            })

            $('#btn-payment-save').on('click', function(){
                const paymentMethod = $('#newTableSelect').val();
                const tableId = $('#tableId').val();
                const orderId = $('#orderId').val();
                const kindPayment = $('#kindPayment').val();
                if (!paymentMethod) {
                    alert('Vui lòng chọn phương thức thanh toán.');
                    return;
                }
                if(kindPayment === 'order'){
                    $.ajax({
                        url: '@Url.Action("QuickPaymentByOrder", "Order")',
                        type: 'POST',
                        data: {
                            paymentMethod: paymentMethod,
                            orderId: orderId,
                        },
                        success: function (response) {
                            if (response.success) {
                                showToast('success', response.message);
                                window.location.reload();
                            } else {
                                alert('Xảy ra lỗi khi thanh toán. Vui lòng thử lại.');
                            }
                        },
                        error: function () {
                            alert('Xảy ra lỗi khi thanh toán. Vui lòng thử lại.');
                        }
                    });
                    return;
                }
                else if (kindPayment === 'all'){
                    $.ajax({
                        url: '@Url.Action("QuickPaymentByTable", "Order")',
                        type: 'POST',
                        data: {
                            paymentMethod: paymentMethod,
                            tableId: tableId,
                        },
                        success: function (response) {
                            if (response.success) {
                                showToast('success', response.message);
                                window.location.reload();
                            } else {
                                alert('Xảy ra lỗi khi thanh toán. Vui lòng thử lại.');
                            }
                        },
                        error: function () {
                            alert('Xảy ra lỗi khi thanh toán. Vui lòng thử lại.');
                        }
                    });
                }
            });


        });
    </script>

}