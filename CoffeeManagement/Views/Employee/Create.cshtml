@model Employee
@{
    ViewData["Title"] = "Thêm nhân viên";
    var genders = new List<SelectListItem>()
    {
        new SelectListItem("Nam", "Nam"),
        new SelectListItem("Nữ", "Nữ"),
    };
}
@section Links {
    <link rel="stylesheet" href="~/assets/css/course.css">
    <link rel="stylesheet" href="~/assets/css/checkbox.css">
    <style>
        .form-group {
            display: flex;
            flex-direction: column;
        }
    </style>
}


<div class="container">
    <div class="table-container m-4">
        <h4 class="text-center mb-4 mt-2 text-danger" style="font-size:30px;font-weight:bold;">THÊM NHÂN VIÊN</h4>
        <form asp-action="Create" asp-controller="Student" asp-area="Admin" method="post" id="form-create" class="container">
            <div class="d-flex justify-content-between mb-3 align-items-center flex-wrap gap-2">
                <div class="d-flex gap-2 align-items-center w-75">
                    <span style="text-wrap: nowrap;">Mã nhân viên:</span> <b> @ViewBag.NewId</b>
                    <input type="hidden" asp-for="StatusId" value="1"/>
                </div>
            </div>
            <hr />
            <div class="row info-detail">
                <div class="col-lg-4">
                    <div class="form-group mb-3">
                        <span style="text-wrap: nowrap;">Họ và Tên</span>
                        <input asp-for="FullName" class="form-control" required />
                    </div>
                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.DayOfBirth, "Ngày sinh", new { @class = "form-label" })
                        @Html.TextBoxFor(x => x.DayOfBirth, "dd/MM/yyyy", new { @class = "form-control", type = "date", required = "required" })
                    </div>
                    <div class="form-group mb-3">
                        @Html.Label("Gender", "Giới tính", new { @class = "form-label" })
                        @Html.DropDownListFor(x => x.Gender, genders, new { @class = "form-control" })
                    </div>
                    <div class="form-group mb-3">
                        @Html.Label("PhoneNo", "Số điện thoại", new { @class = "form-label" })
                        @Html.TextBoxFor(x => x.PhoneNo, "", new { @class = "form-control", type = "text" })
                    </div>
                    <div class="form-group mb-3">
                        @Html.Label("StreetAddress", "Địa chỉ", new { @class = "form-label" })
                        @Html.TextBoxFor(x => x.Address, "", new { @class = "form-control", type = "text" })
                    </div>
                </div>
                <div class="col-lg-4">
                    
                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.Email, "Email", new { @class = "form-label" })
                        <input asp-for="Email" class="form-control" required />
                    </div>
                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.HiredDate, "Ngày đăng ký HĐ", new { @class = "form-label" })
                        @Html.TextBoxFor(x => x.HiredDate, "dd/MM/yyyy", new { @class = "form-control", type = "date", required = "required" })
                    </div>
                    <div class="form-group mb-3">
                        <label for="PositionId">Vị trí công việc</label>
                        @Html.DropDownListFor(u => u.PositionId, (SelectList)ViewBag.Positions, "Chọn vị trí", new { @class = "form-control", required = "required" })
                    </div>
                    <div class="form-group mb-3">
                        @Html.LabelFor(x => x.SalaryPerHour, "Lương theo giờ", new { @class = "form-label" })
                        @Html.TextBoxFor(x => x.SalaryPerHour,  new { @class = "form-control", type="number", step="any", min="0", required = "required" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group mb-3">
                        <label for="HasAccount">Tạo tài khoản hệ thống</label>
                        <div class="checkbox-wrapper-31 mt-2">
                            <input type="checkbox" asp-for="HasAccount" checked/>
                            <svg viewBox="0 0 35.6 35.6">
                                <circle class="background" cx="17.8" cy="17.8" r="17.8"></circle>
                                <circle class="stroke" cx="17.8" cy="17.8" r="14.37"></circle>
                                <polyline class="check" points="11.78 18.12 15.55 22.23 25.17 12.87"></polyline>
                            </svg>
                        </div>
                    </div>
                    <div class="form-group mb-3 form-account">
                        <label for="Username">Tên đăng nhập</label>
                        <input id="Username" name="Username" class="form-control" />
                    </div>
                    <div class="form-group mb-3 form-account">
                        <label for="Password">Mật khẩu</label>
                        <input id="Password" name="Password" class="form-control" />
                    </div>
                    <div class="form-group mb-3 form-account">
                        <label for="UserGroupId">Nhóm phân quyền</label>
                        @Html.DropDownList("UserGroupId", (SelectList)ViewBag.UserGroups, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            
            <div class="mt-3 text-lg-end">
                <a asp-action="Index" class="btn btn-outline-secondary">Quay lại</a>
                <button id="btn-create" type="submit" class="btn btn-primary ">Tạo</button>
            </div>
        </form>
    </div>

</div>

@section Scripts {
   
    <script>
        


        $(document).ready(function () {
            $('form').submit(function (event) {
                event.preventDefault(); // Ngăn form gửi theo cách mặc định

                // Tạo đối tượng FormData từ form
                var formData = new FormData(this);

                // Gửi AJAX
                $.ajax({
                    url: '@Url.Action("Create", "Employee")',
                    method: 'post',
                    data: formData,
                    contentType: false, // Không đặt contentType để FormData hoạt động chính xác
                    processData: false, // Không xử lý dữ liệu vì FormData sẽ làm việc này
                    success: function (response) {
                        if (response.success) {
                            showAlert("success", "Tạo thành công");
                            setTimeout(function () {
                                window.location.href = response.redirect;
                            }, 1500);
                        } else {
                            showAlert("error", response.error);
                        }
                    },
                    error: function () {
                        showAlert("error", "Có lỗi xảy ra khi gửi yêu cầu.");
                    }
                });
            });
            $('#HasAccount').on('change', function () {
                let checked = $(this).prop("checked");
                console.log(checked);
                if (!checked) {
                    $('.form-account').hide();
                }else{
                    $('.form-account').show();

                }
            });
        });

    </script>
}
